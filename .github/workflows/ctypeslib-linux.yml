
# good example https://github.com/thenewguy/django-randomfields/blob/master/.github/workflows/sdist.yml
name: ctypeslib-linux

on: [push, pull_request]


jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        # python-version: [ 3.5, 3.6, 3.7, 3.8, 3.9 ]
         os: [ubuntu-latest, macos-latest, windows-latest]
         python-version: [ '3.7', '3.8', '3.9', '3.10', '3.11' ]
         clang-version: ['11', '14']
        # clang 15+ is C2X standard and requires cleaning up C code in test libs
        # https://github.com/madler/zlib/issues/633

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Clang
      uses: egor-tensin/setup-clang@v1
      with:
        version: ${{ matrix.clang-version }}
        platform: x64
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools setuptools_scm clang==${{ matrix.clang-version }}.* coveralls coverage[toml]
    - name: build test libs
      run: |
        CFLAGS="-Wall -Wextra -Werror -std=c99 -pedantic -fpic"
        LDFLAGS="-shared"
        clang $CFLAGS $LDFLAGS -o test/data/test-callbacks.so test/data/test-callbacks.c
    - name: Show  LD_LIBRARY_PATH
      run: |
        echo $LD_LIBRARY_PATH
        echo $PWD
        echo $(pwd)
        echo ${{runner.os == 'Linux' }}
    - name: Update Linux LD_LIBRARY_PATH
      if: ${{runner.os == 'Linux' }}
      run: |
        echo "LD_LIBRARY_PATH=$(pwd)/test/data/:$LD_LIBRARY_PATH" >> $GITHUB_ENV
    - name: Update Windows PATH
      if: ${{runner.os == 'Windows' }}
      run: |
        echo "PATH=$(pwd)/test/data/:$Env:PATH" >> $GITHUB_ENV
    - name: Update macOS PATH
      if: ${{runner.os == 'macOS' }}
      run: |
        echo "DYLD_LIBRARY_PATH=$(pwd)/test/data/:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
    - name: Install clang2py
      run: |
        pip install --upgrade -e .
    - name: Test with Unittest and coverage
      run: |
        coverage run --source=ctypeslib -m unittest test.alltests
    - name: Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true
        flag-name: Unit Test

  coveralls_finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true

#    - name: Coveralls
#      run: |
#        coveralls
#    env:
#      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
